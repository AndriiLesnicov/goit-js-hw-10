{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet selectedDate = null;\nlet intervalId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const picked = selectedDates[0];\n    if (picked <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      selectedDate = picked;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!selectedDate) return;\n\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = selectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerUI(convertMs(timeLeft));\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}"],"names":["startBtn","dateTimePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedDate","intervalId","options","selectedDates","picked","iziToast","flatpickr","timeLeft","updateTimerUI","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAe,KACfC,EAAa,KAEjBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAASD,EAAc,CAAC,EAC1BC,GAAU,IAAI,MAChBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBM,EAAeI,EACfV,EAAS,SAAW,GAEvB,CACH,EAEAY,EAAUX,EAAgBO,CAAO,EAEjCR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BM,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAU,EACxBO,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3Db,EAAe,SAAW,GAC1B,MACD,CAEDa,EAAcC,EAAUF,CAAQ,CAAC,CAClC,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAc,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDjB,EAAS,YAAckB,EAAeJ,CAAI,EAC1Cb,EAAU,YAAciB,EAAeH,CAAK,EAC5Cb,EAAY,YAAcgB,EAAeF,CAAO,EAChDb,EAAY,YAAce,EAAeD,CAAO,CAClD,CAEA,SAASJ,EAAUM,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAOG,EAAK,KAAQ,GAAM,EACzCF,EAAU,KAAK,MAAOE,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}